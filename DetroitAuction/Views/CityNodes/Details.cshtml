@model Auction.Models.ZillowModel.ZillowEstimate


@{
    ViewBag.Title = "Details";
    var googleApiId = "AIzaSyBJTntA6I2kn3Y3wC17WECYAsLViTT8QSg";
    var compLink = Model.LinktoComparables;
    var detailsLink = Model.LinktoHomeDetails;
    var mapLink = Model.LinktoMap;

    //var GoogleImage = String.Format("https://maps.googleapis.com/maps/api/streetview?size=400x400&location={1},{2}&fov=90&heading=235&pitch=10&key={0}", googleApiId, Model.Latitude, Model.Longitude);
    var GoogleURL = String.Format("https://maps.googleapis.com/maps/api/js?key={0}&callback=initMap", googleApiId);
    Layout = Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Directly Accessing Street View Data</title>
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link href="~/assets/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/assets/bootstrap/js/bootstrap.js"></script>
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 50%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
<div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Detroit Auction", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
           <div class="row"> <h1>Details</h1></div>
    <div id="pano" style="width: 50%; height: 50%;float:left"></div>
    <div id="map" style="width: 50%; height: 50%;float:left"></div>
    <div class="row">

        <div class="col-md-4  col-lg-offset-4">
            <h4>Property Details</h4>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Street)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Street)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ZipCode)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ZipCode)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Estimate)
                </dt>

                <dd>
                    @String.Format("{0:c}", Html.DisplayFor(model => model.Estimate))
                </dd>

                <dt>
                    Low Value
                </dt>

                <dd>
                    @String.Format("{0:c}", Html.DisplayFor(model => model.ValueRangeLow))
                </dd>
                <dt>
                    High Value
                </dt>

                <dd>
                    @String.Format("{0:c}", Html.DisplayFor(model => model.ValueRangeHigh))
                </dd>

                <dt>
                    Last Updated
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastUpdated)
                </dd>
            </dl>

        </div>
        <div class="row col-md-12 " style=" margin-bottom: 10px;">
            <span><button class="btn btn-primary " onclick="location.href='@compLink';return false;">Get Comparables</button></span>
            <span class=" btn-space"><button class="btn btn-primary " onclick="location.href='@detailsLink';return false;">More Details</button></span>
            <span class=" btn-space"><button class="btn btn-primary" onclick="location.href='@Url.Action("Index", "CityNodes")'">Back to List</button></span>
        </div>
    </div>

    <script>
        /*
         * Click the map to set a new location for the Street View camera.
         */

        var map;
        var panorama;

        function initMap() {
            var berkeley = { lat: @Model.Latitude, lng: @Model.Longitude };
            var sv = new google.maps.StreetViewService();

            panorama = new google.maps.StreetViewPanorama(document.getElementById('pano'));

            // Set up the map.
            map = new google.maps.Map(document.getElementById('map'), {
                center: berkeley,
                zoom: 16,
                streetViewControl: false
            });

            // Set the initial Street View camera to the center of the map
            sv.getPanorama({ location: berkeley, radius: 50 }, processSVData);

            // Look for a nearby Street View panorama when the map is clicked.
            // getPanorama will return the nearest pano when the given
            // radius is 50 meters or less.
            map.addListener('click', function (event) {
                sv.getPanorama({ location: event.latLng, radius: 50 }, processSVData);
            });
        }

        function processSVData(data, status) {
            if (status === 'OK') {
                var marker = new google.maps.Marker({
                    position: data.location.latLng,
                    map: map,
                    title: data.location.description
                });

                panorama.setPano(data.location.pano);
                panorama.setPov({
                    heading: 270,
                    pitch: 0
                });
                panorama.setVisible(true);

                marker.addListener('click', function () {
                    var markerPanoID = data.location.pano;
                    // Set the Pano to use the passed panoID.
                    panorama.setPano(markerPanoID);
                    panorama.setPov({
                        heading: 270,
                        pitch: 0
                    });
                    panorama.setVisible(true);
                });
            } else {
                console.error('Street View data not found for this location.');
            }
        }
    </script>
    <script async defer
            src=@GoogleURL>
    </script>
</body>
</html>